{"version":3,"sources":["utils/theme.js","components/SearchInput.js","components/Header.js","components/Card.js","components/CardList.js","components/StatusBar.js","components/ErrorBoundary.js","containers/App.js","serviceWorker.js","index.js"],"names":["space","fonts","body","heading","monospace","fontSizes","fontWeights","bold","lineHeights","initialColorMode","colors","text","background","primary","secondary","accent","modes","dark","buttons","bg","color","fontWeight","transition","cards","padding","borderRadius","boxShadow","textAlign","styles","root","fontFamily","lineHeight","h1","fontSize","h2","h3","h4","h5","h6","p","a","pre","overflowX","code","table","width","borderCollapse","borderSpacing","th","borderBottomStyle","td","img","maxWidth","SearchInput","searchTerm","searchChange","sx","mb","placeholder","value","onChange","Header","searchTerms","useColorMode","colorMode","setColorMode","display","flexDirection","alignItems","position","right","onClick","e","CardComponent","id","username","name","email","border","src","CardList","robots","gap","columns","map","robot","idx","Card","key","StatusBar","loading","error","resultLength","role","aria-label","ErrorBoundary","state","hasError","info","this","setState","props","children","Component","App","useState","setSearchTerm","searchResults","setSearchResults","setError","setLoading","useEffect","async","fetch","response","json","data","results","filter","toLowerCase","includes","getUsers","theme","target","length","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0032c758.chunk.js","sourcesContent":["export default {\r\n  space: [0, 4, 8, 16, 32, 64, 128, 256, 512],\r\n  fonts: {\r\n    body: \"Lato, sans-serif\",\r\n    heading: \"Roboto, sans-serif\",\r\n    monospace: \"Menlo, monospace\"\r\n  },\r\n  fontSizes: [12, 14, 16, 20, 24, 32, 48, 64, 96],\r\n  fontWeights: {\r\n    body: 400,\r\n    heading: 700,\r\n    bold: 700\r\n  },\r\n  lineHeights: {\r\n    body: 1.5,\r\n    heading: 1.125\r\n  },\r\n  initialColorMode: \"light\",\r\n  colors: {\r\n    text: \"#2C393B\",\r\n    background: \"#EDF2ED\",\r\n    primary: \"#EC5B31\",\r\n    secondary: \"#f25f4c\",\r\n    accent: \"887C7C\",\r\n    modes: {\r\n      dark: {\r\n        background: \"#0f0e17\",\r\n        text: \"#fffffe\",\r\n        primary: \"#EC5B31\",\r\n        secondary: \"#f25f4c\",\r\n        accent: \"#a7a9be\"\r\n      }\r\n    }\r\n  },\r\n  buttons: {\r\n    primary: {\r\n      bg: \"primary\",\r\n      color: \"text\",\r\n      fontWeight: \"bold\",\r\n      transition: \"all 0.25s\",\r\n      \"&:hover\": {\r\n        bg: \"secondary\",\r\n        color: \"text\",\r\n        transition: \"all 0.25s\"\r\n      }\r\n    },\r\n    secondary: {\r\n      bg: \"secondary\",\r\n      color: \"text\",\r\n      fontWeight: \"bold\",\r\n      transition: \"all 0.25s\",\r\n      \"&:hover\": {\r\n        bg: \"accent\",\r\n        transition: \"all 0.25s\"\r\n      }\r\n    }\r\n  },\r\n  cards: {\r\n    primary: {\r\n      padding: 2,\r\n      borderRadius: 4,\r\n      boxShadow: \"0 0 8px rgba(0, 0, 0, 0.125)\",\r\n      textAlign: \"center\"\r\n    }\r\n  },\r\n  styles: {\r\n    root: {\r\n      fontFamily: \"body\",\r\n      lineHeight: \"body\",\r\n      fontWeight: \"body\"\r\n    },\r\n    h1: {\r\n      color: \"primary\",\r\n      fontFamily: \"heading\",\r\n      lineHeight: \"heading\",\r\n      fontWeight: \"heading\",\r\n      fontSize: 5\r\n    },\r\n    h2: {\r\n      color: \"primary\",\r\n      fontFamily: \"heading\",\r\n      lineHeight: \"heading\",\r\n      fontWeight: \"heading\",\r\n      fontSize: 4\r\n    },\r\n    h3: {\r\n      color: \"primary\",\r\n      fontFamily: \"heading\",\r\n      lineHeight: \"heading\",\r\n      fontWeight: \"heading\",\r\n      fontSize: 3\r\n    },\r\n    h4: {\r\n      color: \"primary\",\r\n      fontFamily: \"heading\",\r\n      lineHeight: \"heading\",\r\n      fontWeight: \"heading\",\r\n      fontSize: 2\r\n    },\r\n    h5: {\r\n      color: \"primary\",\r\n      fontFamily: \"heading\",\r\n      lineHeight: \"heading\",\r\n      fontWeight: \"heading\",\r\n      fontSize: 1\r\n    },\r\n    h6: {\r\n      color: \"primary\",\r\n      fontFamily: \"heading\",\r\n      lineHeight: \"heading\",\r\n      fontWeight: \"heading\",\r\n      fontSize: 0\r\n    },\r\n    p: {\r\n      color: \"text\",\r\n      fontFamily: \"body\",\r\n      fontWeight: \"body\",\r\n      lineHeight: \"body\"\r\n    },\r\n    a: {\r\n      color: \"primary\"\r\n    },\r\n    pre: {\r\n      fontFamily: \"monospace\",\r\n      overflowX: \"auto\",\r\n      code: {\r\n        color: \"inherit\"\r\n      }\r\n    },\r\n    code: {\r\n      fontFamily: \"monospace\",\r\n      fontSize: \"inherit\"\r\n    },\r\n    table: {\r\n      width: \"100%\",\r\n      borderCollapse: \"separate\",\r\n      borderSpacing: 0\r\n    },\r\n    th: {\r\n      textAlign: \"left\",\r\n      borderBottomStyle: \"solid\"\r\n    },\r\n    td: {\r\n      textAlign: \"left\",\r\n      borderBottomStyle: \"solid\"\r\n    },\r\n    img: {\r\n      maxWidth: \"100%\"\r\n    }\r\n  }\r\n};\r\n","import PropTypes from \"prop-types\";\r\n/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\";\r\nimport { Input } from \"@theme-ui/components\";\r\n\r\nconst SearchInput = ({ searchTerm, searchChange }) => {\r\n  return (\r\n    <Input\r\n      sx={{ mb: 3, maxWidth: 250, color: \"text\" }}\r\n      placeholder=\"Enter Robot Name\"\r\n      value={searchTerm}\r\n      onChange={searchChange}\r\n    />\r\n  );\r\n};\r\n\r\nSearchInput.propTypes = {\r\n  searchTerm: PropTypes.string.isRequired,\r\n  searchChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchInput;\r\n","import { Styled, useColorMode } from \"theme-ui\";\r\nimport PropTypes from \"prop-types\";\r\n/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\";\r\nimport SearchInput from \"./SearchInput\";\r\nimport { Button } from \"@theme-ui/components\";\r\n\r\nconst Header = ({ searchTerms, searchChange }) => {\r\n  const [colorMode, setColorMode] = useColorMode();\r\n\r\n  return (\r\n    <header\r\n      sx={{\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        alignItems: \"center\",\r\n        bg: \"background\",\r\n        padding: 16\r\n      }}\r\n    >\r\n      <Styled.h1>RoboFriends</Styled.h1>\r\n      <Styled.p>Search and instantly find your Robot Friends!</Styled.p>\r\n      <SearchInput searchTerm={searchTerms} searchChange={searchChange} />\r\n      <Button\r\n        sx={{ position: \"absolute\", right: \"16px\" }}\r\n        onClick={e => {\r\n          setColorMode(colorMode === \"default\" ? \"dark\" : \"default\");\r\n        }}\r\n      >\r\n        Lights {colorMode === \"default\" ? \"OFF\" : \"ON\"}!\r\n      </Button>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  searchTerms: PropTypes.string.isRequired,\r\n  searchChange: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Header;\r\n","/** @jsx jsx */\r\nimport { jsx } from \"theme-ui\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Styled } from \"theme-ui\";\r\nimport { Card, Image } from \"@theme-ui/components\";\r\n\r\nconst CardComponent = ({ id, username, name, email }) => {\r\n  return (\r\n    <Card sx={{ bg: \"background\", border: \"2px solid black\" }}>\r\n      <Image src={`https://robohash.org/${id}?size=200x200`} />\r\n      <Styled.h2 sx={{ color: \"primary\" }}>{name}</Styled.h2>\r\n      <Styled.p sx={{ color: \"text\" }}>{username}</Styled.p>\r\n      <Styled.p sx={{ color: \"text\" }}>{email}</Styled.p>\r\n    </Card>\r\n  );\r\n};\r\n\r\nCardComponent.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  username: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  email: PropTypes.string.isRequired\r\n};\r\n\r\nexport default CardComponent;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid } from \"@theme-ui/components\";\r\nimport Card from \"../components/Card\";\r\n\r\nconst CardList = ({ robots }) => {\r\n  return (\r\n    <>\r\n      <Grid\r\n        gap={3}\r\n        columns={[2, null, 5]}\r\n        sx={{\r\n          bg: \"text\",\r\n          padding: 16\r\n        }}\r\n      >\r\n        {robots.map((robot, idx) => (\r\n          <Card\r\n            key={idx}\r\n            id={robot.id}\r\n            username={robot.username}\r\n            name={robot.name}\r\n            email={robot.email}\r\n          />\r\n        ))}\r\n      </Grid>\r\n    </>\r\n  );\r\n};\r\n\r\nCardList.propTypes = {\r\n  robots: PropTypes.array.isRequired\r\n};\r\n\r\nexport default CardList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Styled } from \"theme-ui\";\r\nimport { Box } from \"@theme-ui/components\";\r\n\r\nconst StatusBar = ({ loading, error, resultLength }) => {\r\n  return (\r\n    <Box sx={{ bg: \"secondary\", padding: \"16px\", textAlign: \"center\" }}>\r\n      {loading ? (\r\n        <Styled.p>\r\n          Please wait while we're trying to load your data.\r\n          <span role=\"img\" aria-label=\"Unamused\">\r\n            😒\r\n          </span>\r\n        </Styled.p>\r\n      ) : error ? (\r\n        <Styled.p>\r\n          Oh no! We've encountered an error!\r\n          <span role=\"img\" aria-label=\"Screaming\">\r\n            😱\r\n          </span>\r\n        </Styled.p>\r\n      ) : resultLength > 0 ? (\r\n        <Styled.p>\r\n          We have found {resultLength} robots matching your search.{\" \"}\r\n          <span role=\"img\" aria-label=\"Robot\">\r\n            🤖\r\n          </span>\r\n        </Styled.p>\r\n      ) : (\r\n        <Styled.p>\r\n          Sorry, we could not find any robots matching your search.\r\n          <span role=\"img\" aria-label=\"Sad\">\r\n            🙁\r\n          </span>\r\n        </Styled.p>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nStatusBar.propTypes = {\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.bool.isRequired,\r\n  resultLength: PropTypes.number.isRequired\r\n};\r\n\r\nexport default StatusBar;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ErrorBoundary extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      hasError: false\r\n    };\r\n  }\r\n\r\n  componentDidCatch(error, info) {\r\n    this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.hasError) {\r\n      return <h1>Oops. Something went wrong.</h1>;\r\n    } else {\r\n      return this.props.children;\r\n    }\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { ThemeProvider } from \"theme-ui\";\r\nimport theme from \"../utils/theme\";\r\nimport Header from \"../components/Header\";\r\nimport CardList from \"../components/CardList\";\r\nimport StatusBar from \"../components/StatusBar\";\r\nimport ErrorBoundary from \"../components/ErrorBoundary\";\r\n\r\nfunction App() {\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [error, setError] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const onSearchChange = e => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    async function getUsers() {\r\n      setError(false);\r\n      setLoading(true);\r\n      try {\r\n        const response = await fetch(\r\n          \"https://jsonplaceholder.typicode.com/users\"\r\n        );\r\n        const data = await response.json();\r\n\r\n        const results = data.filter(robot => {\r\n          return robot.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n        });\r\n\r\n        setSearchResults(results);\r\n      } catch (error) {\r\n        setError(true);\r\n      }\r\n      setLoading(false);\r\n    }\r\n\r\n    getUsers();\r\n  }, [searchTerm]);\r\n\r\n  return (\r\n    <ErrorBoundary>\r\n      <ThemeProvider theme={theme}>\r\n        <Header searchTerms={searchTerm} searchChange={onSearchChange} />\r\n\r\n        <StatusBar\r\n          loading={loading}\r\n          error={error}\r\n          resultLength={searchResults.length}\r\n        />\r\n\r\n        {searchResults.length > 0 ? <CardList robots={searchResults} /> : null}\r\n      </ThemeProvider>\r\n    </ErrorBoundary>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./containers/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}